name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 4'
  workflow_dispatch:

jobs:
  debian:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["ubuntu:jammy", "ubuntu:latest", "debian:bullseye-slim", "debian:stable-slim", "debian:sid-slim"]
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          apt-get install --no-install-recommends -y git ca-certificates gcc libc6-dev make pkg-config libssl-dev libcurl4-openssl-dev libidn2-dev libidn11-dev libmagic-dev
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: gplaces # mitigation for build failure after CVE-2022-24765 was mitigated
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: |
          cd gplaces
          CFLAGS="-O3 -Wall -Wextra -pedantic -Wno-unused-result -Wstack-usage=1024 -Werror" make install
          make uninstall
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBIDN2=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBIDN2=0 WITH_LIBIDN=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBMAGIC=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=0 WITH_SPARTAN=0 WITH_FINGER=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=1
  alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: "alpine:3.15"
            libssl: openssl
          - image: "alpine:3.15"
            libssl: libressl
          - image: "alpine:latest"
            libssl: openssl
          - image: "alpine:edge"
            libssl: openssl
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Install dependencies
        run: |
          apk add git gcc musl-dev make pkgconf ${{ matrix.libssl }}-dev curl-dev libidn-dev file-dev
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: gplaces # mitigation for build failure after CVE-2022-24765 was mitigated
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: |
          cd gplaces
          CFLAGS="-O3 -Wall -Wextra -pedantic -Wno-unused-result -Wstack-usage=1024 -Werror" make install
          make uninstall
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBIDN=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBMAGIC=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=0 WITH_SPARTAN=0 WITH_FINGER=0 WITH_GUPPY=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=1
  arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git gcc make pkgconf libidn
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: gplaces # mitigation for build failure after CVE-2022-24765 was mitigated
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: |
          cd gplaces
          CFLAGS="-O3 -Wall -Wextra -pedantic -Wno-unused-result -Wstack-usage=1024 -Werror" make install
          make uninstall
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBIDN2=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBIDN2=0 WITH_LIBIDN=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_LIBMAGIC=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=0 WITH_SPARTAN=0 WITH_FINGER=0 WITH_GUPPY=0
          make clean
          CFLAGS="-O0 -Wall -Wextra -pedantic -Wno-unused-result -Werror" make WITH_GOPHER=0 WITH_GOPHERS=1
