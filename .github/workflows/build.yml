name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 4'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["ubuntu:jammy", "debian:bullseye-slim"]
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          apt-get install --no-install-recommends -y git ca-certificates gcc libc6-dev make pkg-config libssl-dev libmbedtls-dev libcurl4-openssl-dev libmagic-dev
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: |
          make
          make clean
          CFLAGS=-O3 make WITH_LIBMAGIC=1
          make clean
          make WITH_LIBMAGIC=0
          make clean
          CFLAGS=-O3 make WITH_MBEDTLS=1
  edge:
    runs-on: ubuntu-latest
    container:
      image: alpine:edge
    steps:
      - name: Install dependencies
        run: |
          apk add git gcc musl-dev make pkgconf libressl-dev mbedtls-dev curl-dev file-dev
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: |
          make
          make clean
          CFLAGS=-O3 make WITH_LIBMAGIC=1
          make clean
          make WITH_LIBMAGIC=0
          make clean
          CFLAGS=-O3 make WITH_MBEDTLS=1
